/*
 * Copyright (c) Panchosoft
 * Developed by Francisco I. Leyva
 * AppSpy - http://labs.panchosoft.com/appspy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package com.panchosoft.appspy.views;

import com.panchosoft.appspy.AppSpyApp;
import com.panchosoft.appspy.models.Espia;

/**
 *
 * @author Francisco I. Leyva
 */
public class AppSpyBuscador extends javax.swing.JDialog {

    private java.awt.Frame parent;

    /**
     *
     * @param parent
     */
    public AppSpyBuscador(java.awt.Frame parent) {
        this.parent = parent;
        initComponents();
        iniciarComponentes();
    }

    public void iniciarComponentes() {
        //this.getContentPane().setBackground(new Color(51,51,51));
    }

    public void closeAboutBox() {
        dispose();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblInfo = new javax.swing.JLabel();
        selector = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Please select a folder with iPhone or iPod applications (.ipa files)"); // NOI18N
        setAlwaysOnTop(true);
        setFont(new java.awt.Font("Segoe UI", 0, 14));
        setLocationByPlatform(true);
        setModal(true);
        setName("cargandoView"); // NOI18N
        setResizable(false);

        lblInfo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblInfo.setText("Select a folder with iPhone/iPod apps:");
        lblInfo.setName("lblInfo"); // NOI18N

        selector.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        selector.setName("selector"); // NOI18N
        selector.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarCarpeta(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(lblInfo).addComponent(selector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(lblInfo).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(selector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void seleccionarCarpeta(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarCarpeta

        javax.swing.JFileChooser j = (javax.swing.JFileChooser) evt.getSource();
        if (evt.getActionCommand().equals("CancelSelection")) {
            ((AppSpyVista) parent).cancelarCargando();
            ((AppSpyVista) parent).shiftPresionado = false;
            ((AppSpyVista) parent).setFocusable(true);
            this.dispose();
            return;
        }

        final java.io.File s = j.getSelectedFile();

//        javax.swing.JOptionPane.showMessageDialog(this, s.getPath());

//        if(!s.isDirectory() || !s.getPath().endsWith("Mobile Applications")){
//            javax.swing.JOptionPane.showMessageDialog(this, "Invalid folder, the name of the folder is 'Mobile Applications'.");
//            return;
//        }
        if (!s.isDirectory()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a valid directory with .ipa files inside it.");
            return;
        }

        if (AppSpyApp.getController().esDirectorioValido(s.getPath())) {
            this.dispose();
            new java.lang.Thread(new Runnable() {

                @Override
                public void run() {
                    AppSpyApp.getMainFrame().mostrarCargandoApps();

                    AppSpyApp.getMainFrame().borrarListaApps();
                    AppSpyApp.getController().olvidarAplicaciones();

                    Espia.getInstance().establecerDirectorioItunes(s.getPath());
                    AppSpyApp.getController().cargarListaApps(s.getPath());

                    AppSpyApp.getMainFrame().buscandoActualizaciones = true;
                    AppSpyApp.getMainFrame().shiftPresionado = false;
                    AppSpyApp.getMainFrame().mostrarCargandoActualizaciones();
                    AppSpyApp.getController().buscarActualizaciones();
                }
            }, "hilo_busqueda").start();

            return;
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "The folder " + s.getName() + " does not contain iPhone applications (.ipa files), please select other folder.");
            return;
        }
    }//GEN-LAST:event_seleccionarCarpeta
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblInfo;
    private javax.swing.JFileChooser selector;
    // End of variables declaration//GEN-END:variables
}
